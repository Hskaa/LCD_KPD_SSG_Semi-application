
AVR_Drivers_Luminus.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007ac  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000008c4  00000000  00000000  00000800  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000467  00000000  00000000  000010c4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 ad 03 	call	0x75a	; 0x75a <main>
  64:	0c 94 d4 03 	jmp	0x7a8	; 0x7a8 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_u8SetPortDirection>:
#include "DIO_Reg.h"

/****************************************** PORT_Functions ****************************************/

u8 DIO_u8SetPortDirection (u8 Copy_u8Port , u8 Copy_u8Dirc)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <DIO_u8SetPortDirection+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <DIO_u8SetPortDirection+0x8>
  74:	0f 92       	push	r0
  76:	cd b7       	in	r28, 0x3d	; 61
  78:	de b7       	in	r29, 0x3e	; 62
  7a:	8a 83       	std	Y+2, r24	; 0x02
  7c:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8StateError = 0;
  7e:	19 82       	std	Y+1, r1	; 0x01

	switch (Copy_u8Port)
  80:	8a 81       	ldd	r24, Y+2	; 0x02
  82:	28 2f       	mov	r18, r24
  84:	30 e0       	ldi	r19, 0x00	; 0
  86:	3d 83       	std	Y+5, r19	; 0x05
  88:	2c 83       	std	Y+4, r18	; 0x04
  8a:	8c 81       	ldd	r24, Y+4	; 0x04
  8c:	9d 81       	ldd	r25, Y+5	; 0x05
  8e:	82 30       	cpi	r24, 0x02	; 2
  90:	91 05       	cpc	r25, r1
  92:	d9 f0       	breq	.+54     	; 0xca <DIO_u8SetPortDirection+0x5e>
  94:	2c 81       	ldd	r18, Y+4	; 0x04
  96:	3d 81       	ldd	r19, Y+5	; 0x05
  98:	23 30       	cpi	r18, 0x03	; 3
  9a:	31 05       	cpc	r19, r1
  9c:	34 f4       	brge	.+12     	; 0xaa <DIO_u8SetPortDirection+0x3e>
  9e:	8c 81       	ldd	r24, Y+4	; 0x04
  a0:	9d 81       	ldd	r25, Y+5	; 0x05
  a2:	81 30       	cpi	r24, 0x01	; 1
  a4:	91 05       	cpc	r25, r1
  a6:	61 f0       	breq	.+24     	; 0xc0 <DIO_u8SetPortDirection+0x54>
  a8:	1f c0       	rjmp	.+62     	; 0xe8 <DIO_u8SetPortDirection+0x7c>
  aa:	2c 81       	ldd	r18, Y+4	; 0x04
  ac:	3d 81       	ldd	r19, Y+5	; 0x05
  ae:	23 30       	cpi	r18, 0x03	; 3
  b0:	31 05       	cpc	r19, r1
  b2:	81 f0       	breq	.+32     	; 0xd4 <DIO_u8SetPortDirection+0x68>
  b4:	8c 81       	ldd	r24, Y+4	; 0x04
  b6:	9d 81       	ldd	r25, Y+5	; 0x05
  b8:	84 30       	cpi	r24, 0x04	; 4
  ba:	91 05       	cpc	r25, r1
  bc:	81 f0       	breq	.+32     	; 0xde <DIO_u8SetPortDirection+0x72>
  be:	14 c0       	rjmp	.+40     	; 0xe8 <DIO_u8SetPortDirection+0x7c>
	{
	case DIO_PORTA : DDRA = Copy_u8Dirc ; break;
  c0:	ea e3       	ldi	r30, 0x3A	; 58
  c2:	f0 e0       	ldi	r31, 0x00	; 0
  c4:	8b 81       	ldd	r24, Y+3	; 0x03
  c6:	80 83       	st	Z, r24
  c8:	11 c0       	rjmp	.+34     	; 0xec <DIO_u8SetPortDirection+0x80>
	case DIO_PORTB : DDRB = Copy_u8Dirc ; break;
  ca:	e7 e3       	ldi	r30, 0x37	; 55
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	8b 81       	ldd	r24, Y+3	; 0x03
  d0:	80 83       	st	Z, r24
  d2:	0c c0       	rjmp	.+24     	; 0xec <DIO_u8SetPortDirection+0x80>
	case DIO_PORTC : DDRC = Copy_u8Dirc ; break;
  d4:	e4 e3       	ldi	r30, 0x34	; 52
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	8b 81       	ldd	r24, Y+3	; 0x03
  da:	80 83       	st	Z, r24
  dc:	07 c0       	rjmp	.+14     	; 0xec <DIO_u8SetPortDirection+0x80>
	case DIO_PORTD : DDRD = Copy_u8Dirc ; break;
  de:	e1 e3       	ldi	r30, 0x31	; 49
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	8b 81       	ldd	r24, Y+3	; 0x03
  e4:	80 83       	st	Z, r24
  e6:	02 c0       	rjmp	.+4      	; 0xec <DIO_u8SetPortDirection+0x80>
	default: Local_u8StateError = 1;      break;
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8StateError ;
  ec:	89 81       	ldd	r24, Y+1	; 0x01

}
  ee:	0f 90       	pop	r0
  f0:	0f 90       	pop	r0
  f2:	0f 90       	pop	r0
  f4:	0f 90       	pop	r0
  f6:	0f 90       	pop	r0
  f8:	cf 91       	pop	r28
  fa:	df 91       	pop	r29
  fc:	08 95       	ret

000000fe <DIO_u8SetPortValue>:

u8 DIO_u8SetPortValue (u8 Copy_u8Port , u8 Copy_u8Value)
{
  fe:	df 93       	push	r29
 100:	cf 93       	push	r28
 102:	00 d0       	rcall	.+0      	; 0x104 <DIO_u8SetPortValue+0x6>
 104:	00 d0       	rcall	.+0      	; 0x106 <DIO_u8SetPortValue+0x8>
 106:	0f 92       	push	r0
 108:	cd b7       	in	r28, 0x3d	; 61
 10a:	de b7       	in	r29, 0x3e	; 62
 10c:	8a 83       	std	Y+2, r24	; 0x02
 10e:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8StateError = 0;
 110:	19 82       	std	Y+1, r1	; 0x01

	switch(Copy_u8Port)
 112:	8a 81       	ldd	r24, Y+2	; 0x02
 114:	28 2f       	mov	r18, r24
 116:	30 e0       	ldi	r19, 0x00	; 0
 118:	3d 83       	std	Y+5, r19	; 0x05
 11a:	2c 83       	std	Y+4, r18	; 0x04
 11c:	8c 81       	ldd	r24, Y+4	; 0x04
 11e:	9d 81       	ldd	r25, Y+5	; 0x05
 120:	82 30       	cpi	r24, 0x02	; 2
 122:	91 05       	cpc	r25, r1
 124:	d9 f0       	breq	.+54     	; 0x15c <DIO_u8SetPortValue+0x5e>
 126:	2c 81       	ldd	r18, Y+4	; 0x04
 128:	3d 81       	ldd	r19, Y+5	; 0x05
 12a:	23 30       	cpi	r18, 0x03	; 3
 12c:	31 05       	cpc	r19, r1
 12e:	34 f4       	brge	.+12     	; 0x13c <DIO_u8SetPortValue+0x3e>
 130:	8c 81       	ldd	r24, Y+4	; 0x04
 132:	9d 81       	ldd	r25, Y+5	; 0x05
 134:	81 30       	cpi	r24, 0x01	; 1
 136:	91 05       	cpc	r25, r1
 138:	61 f0       	breq	.+24     	; 0x152 <DIO_u8SetPortValue+0x54>
 13a:	1f c0       	rjmp	.+62     	; 0x17a <DIO_u8SetPortValue+0x7c>
 13c:	2c 81       	ldd	r18, Y+4	; 0x04
 13e:	3d 81       	ldd	r19, Y+5	; 0x05
 140:	23 30       	cpi	r18, 0x03	; 3
 142:	31 05       	cpc	r19, r1
 144:	81 f0       	breq	.+32     	; 0x166 <DIO_u8SetPortValue+0x68>
 146:	8c 81       	ldd	r24, Y+4	; 0x04
 148:	9d 81       	ldd	r25, Y+5	; 0x05
 14a:	84 30       	cpi	r24, 0x04	; 4
 14c:	91 05       	cpc	r25, r1
 14e:	81 f0       	breq	.+32     	; 0x170 <DIO_u8SetPortValue+0x72>
 150:	14 c0       	rjmp	.+40     	; 0x17a <DIO_u8SetPortValue+0x7c>
	{
	case DIO_PORTA : PORTA = Copy_u8Value ; break;
 152:	eb e3       	ldi	r30, 0x3B	; 59
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	8b 81       	ldd	r24, Y+3	; 0x03
 158:	80 83       	st	Z, r24
 15a:	11 c0       	rjmp	.+34     	; 0x17e <DIO_u8SetPortValue+0x80>
	case DIO_PORTB : PORTB = Copy_u8Value ; break;
 15c:	e8 e3       	ldi	r30, 0x38	; 56
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	8b 81       	ldd	r24, Y+3	; 0x03
 162:	80 83       	st	Z, r24
 164:	0c c0       	rjmp	.+24     	; 0x17e <DIO_u8SetPortValue+0x80>
	case DIO_PORTC : PORTC = Copy_u8Value ; break;
 166:	e5 e3       	ldi	r30, 0x35	; 53
 168:	f0 e0       	ldi	r31, 0x00	; 0
 16a:	8b 81       	ldd	r24, Y+3	; 0x03
 16c:	80 83       	st	Z, r24
 16e:	07 c0       	rjmp	.+14     	; 0x17e <DIO_u8SetPortValue+0x80>
	case DIO_PORTD : PORTD = Copy_u8Value ; break;
 170:	e2 e3       	ldi	r30, 0x32	; 50
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	8b 81       	ldd	r24, Y+3	; 0x03
 176:	80 83       	st	Z, r24
 178:	02 c0       	rjmp	.+4      	; 0x17e <DIO_u8SetPortValue+0x80>
	default: Local_u8StateError = 1;        break;
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8StateError;
 17e:	89 81       	ldd	r24, Y+1	; 0x01
}
 180:	0f 90       	pop	r0
 182:	0f 90       	pop	r0
 184:	0f 90       	pop	r0
 186:	0f 90       	pop	r0
 188:	0f 90       	pop	r0
 18a:	cf 91       	pop	r28
 18c:	df 91       	pop	r29
 18e:	08 95       	ret

00000190 <DIO_u8GetPortValue>:

u8 DIO_u8GetPortValue (u8 Copy_u8Port)
{
 190:	df 93       	push	r29
 192:	cf 93       	push	r28
 194:	00 d0       	rcall	.+0      	; 0x196 <DIO_u8GetPortValue+0x6>
 196:	00 d0       	rcall	.+0      	; 0x198 <DIO_u8GetPortValue+0x8>
 198:	cd b7       	in	r28, 0x3d	; 61
 19a:	de b7       	in	r29, 0x3e	; 62
 19c:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8InValue = 0 ;
 19e:	19 82       	std	Y+1, r1	; 0x01

	switch(Copy_u8Port)
 1a0:	8a 81       	ldd	r24, Y+2	; 0x02
 1a2:	28 2f       	mov	r18, r24
 1a4:	30 e0       	ldi	r19, 0x00	; 0
 1a6:	3c 83       	std	Y+4, r19	; 0x04
 1a8:	2b 83       	std	Y+3, r18	; 0x03
 1aa:	8b 81       	ldd	r24, Y+3	; 0x03
 1ac:	9c 81       	ldd	r25, Y+4	; 0x04
 1ae:	82 30       	cpi	r24, 0x02	; 2
 1b0:	91 05       	cpc	r25, r1
 1b2:	d9 f0       	breq	.+54     	; 0x1ea <DIO_u8GetPortValue+0x5a>
 1b4:	2b 81       	ldd	r18, Y+3	; 0x03
 1b6:	3c 81       	ldd	r19, Y+4	; 0x04
 1b8:	23 30       	cpi	r18, 0x03	; 3
 1ba:	31 05       	cpc	r19, r1
 1bc:	34 f4       	brge	.+12     	; 0x1ca <DIO_u8GetPortValue+0x3a>
 1be:	8b 81       	ldd	r24, Y+3	; 0x03
 1c0:	9c 81       	ldd	r25, Y+4	; 0x04
 1c2:	81 30       	cpi	r24, 0x01	; 1
 1c4:	91 05       	cpc	r25, r1
 1c6:	61 f0       	breq	.+24     	; 0x1e0 <DIO_u8GetPortValue+0x50>
 1c8:	1e c0       	rjmp	.+60     	; 0x206 <DIO_u8GetPortValue+0x76>
 1ca:	2b 81       	ldd	r18, Y+3	; 0x03
 1cc:	3c 81       	ldd	r19, Y+4	; 0x04
 1ce:	23 30       	cpi	r18, 0x03	; 3
 1d0:	31 05       	cpc	r19, r1
 1d2:	81 f0       	breq	.+32     	; 0x1f4 <DIO_u8GetPortValue+0x64>
 1d4:	8b 81       	ldd	r24, Y+3	; 0x03
 1d6:	9c 81       	ldd	r25, Y+4	; 0x04
 1d8:	84 30       	cpi	r24, 0x04	; 4
 1da:	91 05       	cpc	r25, r1
 1dc:	81 f0       	breq	.+32     	; 0x1fe <DIO_u8GetPortValue+0x6e>
 1de:	13 c0       	rjmp	.+38     	; 0x206 <DIO_u8GetPortValue+0x76>
	{
	case DIO_PORTA : Local_u8InValue = PINA	 ; break;
 1e0:	e9 e3       	ldi	r30, 0x39	; 57
 1e2:	f0 e0       	ldi	r31, 0x00	; 0
 1e4:	80 81       	ld	r24, Z
 1e6:	89 83       	std	Y+1, r24	; 0x01
 1e8:	0e c0       	rjmp	.+28     	; 0x206 <DIO_u8GetPortValue+0x76>
	case DIO_PORTB : Local_u8InValue = PINB	 ; break;
 1ea:	e6 e3       	ldi	r30, 0x36	; 54
 1ec:	f0 e0       	ldi	r31, 0x00	; 0
 1ee:	80 81       	ld	r24, Z
 1f0:	89 83       	std	Y+1, r24	; 0x01
 1f2:	09 c0       	rjmp	.+18     	; 0x206 <DIO_u8GetPortValue+0x76>
	case DIO_PORTC : Local_u8InValue = PINC	 ; break;
 1f4:	e3 e3       	ldi	r30, 0x33	; 51
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	80 81       	ld	r24, Z
 1fa:	89 83       	std	Y+1, r24	; 0x01
 1fc:	04 c0       	rjmp	.+8      	; 0x206 <DIO_u8GetPortValue+0x76>
	case DIO_PORTD : Local_u8InValue = PIND	 ; break;
 1fe:	e0 e3       	ldi	r30, 0x30	; 48
 200:	f0 e0       	ldi	r31, 0x00	; 0
 202:	80 81       	ld	r24, Z
 204:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8InValue;
 206:	89 81       	ldd	r24, Y+1	; 0x01
}
 208:	0f 90       	pop	r0
 20a:	0f 90       	pop	r0
 20c:	0f 90       	pop	r0
 20e:	0f 90       	pop	r0
 210:	cf 91       	pop	r28
 212:	df 91       	pop	r29
 214:	08 95       	ret

00000216 <DIO_u8SetPinDirection>:

/****************************************** PIN_Functions ****************************************/
u8 DIO_u8SetPinDirection (u8 Copy_u8Port , u8 Copy_u8Pin , u8 Copy_u8Dirc)
{
 216:	df 93       	push	r29
 218:	cf 93       	push	r28
 21a:	cd b7       	in	r28, 0x3d	; 61
 21c:	de b7       	in	r29, 0x3e	; 62
 21e:	28 97       	sbiw	r28, 0x08	; 8
 220:	0f b6       	in	r0, 0x3f	; 63
 222:	f8 94       	cli
 224:	de bf       	out	0x3e, r29	; 62
 226:	0f be       	out	0x3f, r0	; 63
 228:	cd bf       	out	0x3d, r28	; 61
 22a:	8a 83       	std	Y+2, r24	; 0x02
 22c:	6b 83       	std	Y+3, r22	; 0x03
 22e:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8StateError = 0;
 230:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8Pin <= DIO_PIN7)
 232:	8b 81       	ldd	r24, Y+3	; 0x03
 234:	88 30       	cpi	r24, 0x08	; 8
 236:	08 f0       	brcs	.+2      	; 0x23a <DIO_u8SetPinDirection+0x24>
 238:	f6 c0       	rjmp	.+492    	; 0x426 <DIO_u8SetPinDirection+0x210>
	{
		if(Copy_u8Dirc == DIO_INPUT)
 23a:	8c 81       	ldd	r24, Y+4	; 0x04
 23c:	88 23       	and	r24, r24
 23e:	09 f0       	breq	.+2      	; 0x242 <DIO_u8SetPinDirection+0x2c>
 240:	78 c0       	rjmp	.+240    	; 0x332 <DIO_u8SetPinDirection+0x11c>
		{
			switch(Copy_u8Port)
 242:	8a 81       	ldd	r24, Y+2	; 0x02
 244:	28 2f       	mov	r18, r24
 246:	30 e0       	ldi	r19, 0x00	; 0
 248:	38 87       	std	Y+8, r19	; 0x08
 24a:	2f 83       	std	Y+7, r18	; 0x07
 24c:	8f 81       	ldd	r24, Y+7	; 0x07
 24e:	98 85       	ldd	r25, Y+8	; 0x08
 250:	82 30       	cpi	r24, 0x02	; 2
 252:	91 05       	cpc	r25, r1
 254:	61 f1       	breq	.+88     	; 0x2ae <DIO_u8SetPinDirection+0x98>
 256:	2f 81       	ldd	r18, Y+7	; 0x07
 258:	38 85       	ldd	r19, Y+8	; 0x08
 25a:	23 30       	cpi	r18, 0x03	; 3
 25c:	31 05       	cpc	r19, r1
 25e:	34 f4       	brge	.+12     	; 0x26c <DIO_u8SetPinDirection+0x56>
 260:	8f 81       	ldd	r24, Y+7	; 0x07
 262:	98 85       	ldd	r25, Y+8	; 0x08
 264:	81 30       	cpi	r24, 0x01	; 1
 266:	91 05       	cpc	r25, r1
 268:	69 f0       	breq	.+26     	; 0x284 <DIO_u8SetPinDirection+0x6e>
 26a:	60 c0       	rjmp	.+192    	; 0x32c <DIO_u8SetPinDirection+0x116>
 26c:	2f 81       	ldd	r18, Y+7	; 0x07
 26e:	38 85       	ldd	r19, Y+8	; 0x08
 270:	23 30       	cpi	r18, 0x03	; 3
 272:	31 05       	cpc	r19, r1
 274:	89 f1       	breq	.+98     	; 0x2d8 <DIO_u8SetPinDirection+0xc2>
 276:	8f 81       	ldd	r24, Y+7	; 0x07
 278:	98 85       	ldd	r25, Y+8	; 0x08
 27a:	84 30       	cpi	r24, 0x04	; 4
 27c:	91 05       	cpc	r25, r1
 27e:	09 f4       	brne	.+2      	; 0x282 <DIO_u8SetPinDirection+0x6c>
 280:	40 c0       	rjmp	.+128    	; 0x302 <DIO_u8SetPinDirection+0xec>
 282:	54 c0       	rjmp	.+168    	; 0x32c <DIO_u8SetPinDirection+0x116>
			{
			case DIO_PORTA : CLR_BIT(DDRA ,Copy_u8Pin);	break;
 284:	aa e3       	ldi	r26, 0x3A	; 58
 286:	b0 e0       	ldi	r27, 0x00	; 0
 288:	ea e3       	ldi	r30, 0x3A	; 58
 28a:	f0 e0       	ldi	r31, 0x00	; 0
 28c:	80 81       	ld	r24, Z
 28e:	48 2f       	mov	r20, r24
 290:	8b 81       	ldd	r24, Y+3	; 0x03
 292:	28 2f       	mov	r18, r24
 294:	30 e0       	ldi	r19, 0x00	; 0
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	02 2e       	mov	r0, r18
 29c:	02 c0       	rjmp	.+4      	; 0x2a2 <DIO_u8SetPinDirection+0x8c>
 29e:	88 0f       	add	r24, r24
 2a0:	99 1f       	adc	r25, r25
 2a2:	0a 94       	dec	r0
 2a4:	e2 f7       	brpl	.-8      	; 0x29e <DIO_u8SetPinDirection+0x88>
 2a6:	80 95       	com	r24
 2a8:	84 23       	and	r24, r20
 2aa:	8c 93       	st	X, r24
 2ac:	be c0       	rjmp	.+380    	; 0x42a <DIO_u8SetPinDirection+0x214>
			case DIO_PORTB : CLR_BIT(DDRB ,Copy_u8Pin);	break;
 2ae:	a7 e3       	ldi	r26, 0x37	; 55
 2b0:	b0 e0       	ldi	r27, 0x00	; 0
 2b2:	e7 e3       	ldi	r30, 0x37	; 55
 2b4:	f0 e0       	ldi	r31, 0x00	; 0
 2b6:	80 81       	ld	r24, Z
 2b8:	48 2f       	mov	r20, r24
 2ba:	8b 81       	ldd	r24, Y+3	; 0x03
 2bc:	28 2f       	mov	r18, r24
 2be:	30 e0       	ldi	r19, 0x00	; 0
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	02 2e       	mov	r0, r18
 2c6:	02 c0       	rjmp	.+4      	; 0x2cc <DIO_u8SetPinDirection+0xb6>
 2c8:	88 0f       	add	r24, r24
 2ca:	99 1f       	adc	r25, r25
 2cc:	0a 94       	dec	r0
 2ce:	e2 f7       	brpl	.-8      	; 0x2c8 <DIO_u8SetPinDirection+0xb2>
 2d0:	80 95       	com	r24
 2d2:	84 23       	and	r24, r20
 2d4:	8c 93       	st	X, r24
 2d6:	a9 c0       	rjmp	.+338    	; 0x42a <DIO_u8SetPinDirection+0x214>
			case DIO_PORTC : CLR_BIT(DDRC ,Copy_u8Pin);	break;
 2d8:	a4 e3       	ldi	r26, 0x34	; 52
 2da:	b0 e0       	ldi	r27, 0x00	; 0
 2dc:	e4 e3       	ldi	r30, 0x34	; 52
 2de:	f0 e0       	ldi	r31, 0x00	; 0
 2e0:	80 81       	ld	r24, Z
 2e2:	48 2f       	mov	r20, r24
 2e4:	8b 81       	ldd	r24, Y+3	; 0x03
 2e6:	28 2f       	mov	r18, r24
 2e8:	30 e0       	ldi	r19, 0x00	; 0
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	02 2e       	mov	r0, r18
 2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <DIO_u8SetPinDirection+0xe0>
 2f2:	88 0f       	add	r24, r24
 2f4:	99 1f       	adc	r25, r25
 2f6:	0a 94       	dec	r0
 2f8:	e2 f7       	brpl	.-8      	; 0x2f2 <DIO_u8SetPinDirection+0xdc>
 2fa:	80 95       	com	r24
 2fc:	84 23       	and	r24, r20
 2fe:	8c 93       	st	X, r24
 300:	94 c0       	rjmp	.+296    	; 0x42a <DIO_u8SetPinDirection+0x214>
			case DIO_PORTD : CLR_BIT(DDRD ,Copy_u8Pin);	break;
 302:	a1 e3       	ldi	r26, 0x31	; 49
 304:	b0 e0       	ldi	r27, 0x00	; 0
 306:	e1 e3       	ldi	r30, 0x31	; 49
 308:	f0 e0       	ldi	r31, 0x00	; 0
 30a:	80 81       	ld	r24, Z
 30c:	48 2f       	mov	r20, r24
 30e:	8b 81       	ldd	r24, Y+3	; 0x03
 310:	28 2f       	mov	r18, r24
 312:	30 e0       	ldi	r19, 0x00	; 0
 314:	81 e0       	ldi	r24, 0x01	; 1
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	02 2e       	mov	r0, r18
 31a:	02 c0       	rjmp	.+4      	; 0x320 <DIO_u8SetPinDirection+0x10a>
 31c:	88 0f       	add	r24, r24
 31e:	99 1f       	adc	r25, r25
 320:	0a 94       	dec	r0
 322:	e2 f7       	brpl	.-8      	; 0x31c <DIO_u8SetPinDirection+0x106>
 324:	80 95       	com	r24
 326:	84 23       	and	r24, r20
 328:	8c 93       	st	X, r24
 32a:	7f c0       	rjmp	.+254    	; 0x42a <DIO_u8SetPinDirection+0x214>
			default : Local_u8StateError = 1;
 32c:	81 e0       	ldi	r24, 0x01	; 1
 32e:	89 83       	std	Y+1, r24	; 0x01
 330:	7c c0       	rjmp	.+248    	; 0x42a <DIO_u8SetPinDirection+0x214>
			}
		}
		else if(Copy_u8Dirc == DIO_OUTPUT)
 332:	8c 81       	ldd	r24, Y+4	; 0x04
 334:	81 30       	cpi	r24, 0x01	; 1
 336:	09 f0       	breq	.+2      	; 0x33a <DIO_u8SetPinDirection+0x124>
 338:	73 c0       	rjmp	.+230    	; 0x420 <DIO_u8SetPinDirection+0x20a>
		{
			switch(Copy_u8Port)
 33a:	8a 81       	ldd	r24, Y+2	; 0x02
 33c:	28 2f       	mov	r18, r24
 33e:	30 e0       	ldi	r19, 0x00	; 0
 340:	3e 83       	std	Y+6, r19	; 0x06
 342:	2d 83       	std	Y+5, r18	; 0x05
 344:	8d 81       	ldd	r24, Y+5	; 0x05
 346:	9e 81       	ldd	r25, Y+6	; 0x06
 348:	82 30       	cpi	r24, 0x02	; 2
 34a:	91 05       	cpc	r25, r1
 34c:	51 f1       	breq	.+84     	; 0x3a2 <DIO_u8SetPinDirection+0x18c>
 34e:	2d 81       	ldd	r18, Y+5	; 0x05
 350:	3e 81       	ldd	r19, Y+6	; 0x06
 352:	23 30       	cpi	r18, 0x03	; 3
 354:	31 05       	cpc	r19, r1
 356:	34 f4       	brge	.+12     	; 0x364 <DIO_u8SetPinDirection+0x14e>
 358:	8d 81       	ldd	r24, Y+5	; 0x05
 35a:	9e 81       	ldd	r25, Y+6	; 0x06
 35c:	81 30       	cpi	r24, 0x01	; 1
 35e:	91 05       	cpc	r25, r1
 360:	61 f0       	breq	.+24     	; 0x37a <DIO_u8SetPinDirection+0x164>
 362:	5b c0       	rjmp	.+182    	; 0x41a <DIO_u8SetPinDirection+0x204>
 364:	2d 81       	ldd	r18, Y+5	; 0x05
 366:	3e 81       	ldd	r19, Y+6	; 0x06
 368:	23 30       	cpi	r18, 0x03	; 3
 36a:	31 05       	cpc	r19, r1
 36c:	71 f1       	breq	.+92     	; 0x3ca <DIO_u8SetPinDirection+0x1b4>
 36e:	8d 81       	ldd	r24, Y+5	; 0x05
 370:	9e 81       	ldd	r25, Y+6	; 0x06
 372:	84 30       	cpi	r24, 0x04	; 4
 374:	91 05       	cpc	r25, r1
 376:	e9 f1       	breq	.+122    	; 0x3f2 <DIO_u8SetPinDirection+0x1dc>
 378:	50 c0       	rjmp	.+160    	; 0x41a <DIO_u8SetPinDirection+0x204>
			{
			case DIO_PORTA : SET_BIT(DDRA ,Copy_u8Pin);	break;
 37a:	aa e3       	ldi	r26, 0x3A	; 58
 37c:	b0 e0       	ldi	r27, 0x00	; 0
 37e:	ea e3       	ldi	r30, 0x3A	; 58
 380:	f0 e0       	ldi	r31, 0x00	; 0
 382:	80 81       	ld	r24, Z
 384:	48 2f       	mov	r20, r24
 386:	8b 81       	ldd	r24, Y+3	; 0x03
 388:	28 2f       	mov	r18, r24
 38a:	30 e0       	ldi	r19, 0x00	; 0
 38c:	81 e0       	ldi	r24, 0x01	; 1
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	02 2e       	mov	r0, r18
 392:	02 c0       	rjmp	.+4      	; 0x398 <DIO_u8SetPinDirection+0x182>
 394:	88 0f       	add	r24, r24
 396:	99 1f       	adc	r25, r25
 398:	0a 94       	dec	r0
 39a:	e2 f7       	brpl	.-8      	; 0x394 <DIO_u8SetPinDirection+0x17e>
 39c:	84 2b       	or	r24, r20
 39e:	8c 93       	st	X, r24
 3a0:	44 c0       	rjmp	.+136    	; 0x42a <DIO_u8SetPinDirection+0x214>
			case DIO_PORTB : SET_BIT(DDRB ,Copy_u8Pin);	break;
 3a2:	a7 e3       	ldi	r26, 0x37	; 55
 3a4:	b0 e0       	ldi	r27, 0x00	; 0
 3a6:	e7 e3       	ldi	r30, 0x37	; 55
 3a8:	f0 e0       	ldi	r31, 0x00	; 0
 3aa:	80 81       	ld	r24, Z
 3ac:	48 2f       	mov	r20, r24
 3ae:	8b 81       	ldd	r24, Y+3	; 0x03
 3b0:	28 2f       	mov	r18, r24
 3b2:	30 e0       	ldi	r19, 0x00	; 0
 3b4:	81 e0       	ldi	r24, 0x01	; 1
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	02 2e       	mov	r0, r18
 3ba:	02 c0       	rjmp	.+4      	; 0x3c0 <DIO_u8SetPinDirection+0x1aa>
 3bc:	88 0f       	add	r24, r24
 3be:	99 1f       	adc	r25, r25
 3c0:	0a 94       	dec	r0
 3c2:	e2 f7       	brpl	.-8      	; 0x3bc <DIO_u8SetPinDirection+0x1a6>
 3c4:	84 2b       	or	r24, r20
 3c6:	8c 93       	st	X, r24
 3c8:	30 c0       	rjmp	.+96     	; 0x42a <DIO_u8SetPinDirection+0x214>
			case DIO_PORTC : SET_BIT(DDRC ,Copy_u8Pin);	break;
 3ca:	a4 e3       	ldi	r26, 0x34	; 52
 3cc:	b0 e0       	ldi	r27, 0x00	; 0
 3ce:	e4 e3       	ldi	r30, 0x34	; 52
 3d0:	f0 e0       	ldi	r31, 0x00	; 0
 3d2:	80 81       	ld	r24, Z
 3d4:	48 2f       	mov	r20, r24
 3d6:	8b 81       	ldd	r24, Y+3	; 0x03
 3d8:	28 2f       	mov	r18, r24
 3da:	30 e0       	ldi	r19, 0x00	; 0
 3dc:	81 e0       	ldi	r24, 0x01	; 1
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	02 2e       	mov	r0, r18
 3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <DIO_u8SetPinDirection+0x1d2>
 3e4:	88 0f       	add	r24, r24
 3e6:	99 1f       	adc	r25, r25
 3e8:	0a 94       	dec	r0
 3ea:	e2 f7       	brpl	.-8      	; 0x3e4 <DIO_u8SetPinDirection+0x1ce>
 3ec:	84 2b       	or	r24, r20
 3ee:	8c 93       	st	X, r24
 3f0:	1c c0       	rjmp	.+56     	; 0x42a <DIO_u8SetPinDirection+0x214>
			case DIO_PORTD : SET_BIT(DDRD ,Copy_u8Pin);	break;
 3f2:	a1 e3       	ldi	r26, 0x31	; 49
 3f4:	b0 e0       	ldi	r27, 0x00	; 0
 3f6:	e1 e3       	ldi	r30, 0x31	; 49
 3f8:	f0 e0       	ldi	r31, 0x00	; 0
 3fa:	80 81       	ld	r24, Z
 3fc:	48 2f       	mov	r20, r24
 3fe:	8b 81       	ldd	r24, Y+3	; 0x03
 400:	28 2f       	mov	r18, r24
 402:	30 e0       	ldi	r19, 0x00	; 0
 404:	81 e0       	ldi	r24, 0x01	; 1
 406:	90 e0       	ldi	r25, 0x00	; 0
 408:	02 2e       	mov	r0, r18
 40a:	02 c0       	rjmp	.+4      	; 0x410 <DIO_u8SetPinDirection+0x1fa>
 40c:	88 0f       	add	r24, r24
 40e:	99 1f       	adc	r25, r25
 410:	0a 94       	dec	r0
 412:	e2 f7       	brpl	.-8      	; 0x40c <DIO_u8SetPinDirection+0x1f6>
 414:	84 2b       	or	r24, r20
 416:	8c 93       	st	X, r24
 418:	08 c0       	rjmp	.+16     	; 0x42a <DIO_u8SetPinDirection+0x214>
			default : Local_u8StateError = 1;
 41a:	81 e0       	ldi	r24, 0x01	; 1
 41c:	89 83       	std	Y+1, r24	; 0x01
 41e:	05 c0       	rjmp	.+10     	; 0x42a <DIO_u8SetPinDirection+0x214>
			}
		}
		else
		{
			Local_u8StateError = 1;
 420:	81 e0       	ldi	r24, 0x01	; 1
 422:	89 83       	std	Y+1, r24	; 0x01
 424:	02 c0       	rjmp	.+4      	; 0x42a <DIO_u8SetPinDirection+0x214>
		}
	}
	else
	{
		Local_u8StateError = 1;
 426:	81 e0       	ldi	r24, 0x01	; 1
 428:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8StateError;
 42a:	89 81       	ldd	r24, Y+1	; 0x01
}
 42c:	28 96       	adiw	r28, 0x08	; 8
 42e:	0f b6       	in	r0, 0x3f	; 63
 430:	f8 94       	cli
 432:	de bf       	out	0x3e, r29	; 62
 434:	0f be       	out	0x3f, r0	; 63
 436:	cd bf       	out	0x3d, r28	; 61
 438:	cf 91       	pop	r28
 43a:	df 91       	pop	r29
 43c:	08 95       	ret

0000043e <DIO_u8SetPinValue>:

u8 DIO_u8SetPinValue (u8 Copy_u8Port , u8 Copy_u8Pin , u8 Copy_u8Value)
{
 43e:	df 93       	push	r29
 440:	cf 93       	push	r28
 442:	cd b7       	in	r28, 0x3d	; 61
 444:	de b7       	in	r29, 0x3e	; 62
 446:	28 97       	sbiw	r28, 0x08	; 8
 448:	0f b6       	in	r0, 0x3f	; 63
 44a:	f8 94       	cli
 44c:	de bf       	out	0x3e, r29	; 62
 44e:	0f be       	out	0x3f, r0	; 63
 450:	cd bf       	out	0x3d, r28	; 61
 452:	8a 83       	std	Y+2, r24	; 0x02
 454:	6b 83       	std	Y+3, r22	; 0x03
 456:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8StateError = 0;
 458:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8Pin <= DIO_PIN7)
 45a:	8b 81       	ldd	r24, Y+3	; 0x03
 45c:	88 30       	cpi	r24, 0x08	; 8
 45e:	08 f0       	brcs	.+2      	; 0x462 <DIO_u8SetPinValue+0x24>
 460:	f6 c0       	rjmp	.+492    	; 0x64e <DIO_u8SetPinValue+0x210>
	{
		if(Copy_u8Value == DIO_LOW)
 462:	8c 81       	ldd	r24, Y+4	; 0x04
 464:	88 23       	and	r24, r24
 466:	09 f0       	breq	.+2      	; 0x46a <DIO_u8SetPinValue+0x2c>
 468:	78 c0       	rjmp	.+240    	; 0x55a <DIO_u8SetPinValue+0x11c>
		{
			switch(Copy_u8Port)
 46a:	8a 81       	ldd	r24, Y+2	; 0x02
 46c:	28 2f       	mov	r18, r24
 46e:	30 e0       	ldi	r19, 0x00	; 0
 470:	38 87       	std	Y+8, r19	; 0x08
 472:	2f 83       	std	Y+7, r18	; 0x07
 474:	8f 81       	ldd	r24, Y+7	; 0x07
 476:	98 85       	ldd	r25, Y+8	; 0x08
 478:	82 30       	cpi	r24, 0x02	; 2
 47a:	91 05       	cpc	r25, r1
 47c:	61 f1       	breq	.+88     	; 0x4d6 <DIO_u8SetPinValue+0x98>
 47e:	2f 81       	ldd	r18, Y+7	; 0x07
 480:	38 85       	ldd	r19, Y+8	; 0x08
 482:	23 30       	cpi	r18, 0x03	; 3
 484:	31 05       	cpc	r19, r1
 486:	34 f4       	brge	.+12     	; 0x494 <DIO_u8SetPinValue+0x56>
 488:	8f 81       	ldd	r24, Y+7	; 0x07
 48a:	98 85       	ldd	r25, Y+8	; 0x08
 48c:	81 30       	cpi	r24, 0x01	; 1
 48e:	91 05       	cpc	r25, r1
 490:	69 f0       	breq	.+26     	; 0x4ac <DIO_u8SetPinValue+0x6e>
 492:	60 c0       	rjmp	.+192    	; 0x554 <DIO_u8SetPinValue+0x116>
 494:	2f 81       	ldd	r18, Y+7	; 0x07
 496:	38 85       	ldd	r19, Y+8	; 0x08
 498:	23 30       	cpi	r18, 0x03	; 3
 49a:	31 05       	cpc	r19, r1
 49c:	89 f1       	breq	.+98     	; 0x500 <DIO_u8SetPinValue+0xc2>
 49e:	8f 81       	ldd	r24, Y+7	; 0x07
 4a0:	98 85       	ldd	r25, Y+8	; 0x08
 4a2:	84 30       	cpi	r24, 0x04	; 4
 4a4:	91 05       	cpc	r25, r1
 4a6:	09 f4       	brne	.+2      	; 0x4aa <DIO_u8SetPinValue+0x6c>
 4a8:	40 c0       	rjmp	.+128    	; 0x52a <DIO_u8SetPinValue+0xec>
 4aa:	54 c0       	rjmp	.+168    	; 0x554 <DIO_u8SetPinValue+0x116>
			{
			case DIO_PORTA : CLR_BIT(PORTA ,Copy_u8Pin);	break;
 4ac:	ab e3       	ldi	r26, 0x3B	; 59
 4ae:	b0 e0       	ldi	r27, 0x00	; 0
 4b0:	eb e3       	ldi	r30, 0x3B	; 59
 4b2:	f0 e0       	ldi	r31, 0x00	; 0
 4b4:	80 81       	ld	r24, Z
 4b6:	48 2f       	mov	r20, r24
 4b8:	8b 81       	ldd	r24, Y+3	; 0x03
 4ba:	28 2f       	mov	r18, r24
 4bc:	30 e0       	ldi	r19, 0x00	; 0
 4be:	81 e0       	ldi	r24, 0x01	; 1
 4c0:	90 e0       	ldi	r25, 0x00	; 0
 4c2:	02 2e       	mov	r0, r18
 4c4:	02 c0       	rjmp	.+4      	; 0x4ca <DIO_u8SetPinValue+0x8c>
 4c6:	88 0f       	add	r24, r24
 4c8:	99 1f       	adc	r25, r25
 4ca:	0a 94       	dec	r0
 4cc:	e2 f7       	brpl	.-8      	; 0x4c6 <DIO_u8SetPinValue+0x88>
 4ce:	80 95       	com	r24
 4d0:	84 23       	and	r24, r20
 4d2:	8c 93       	st	X, r24
 4d4:	be c0       	rjmp	.+380    	; 0x652 <DIO_u8SetPinValue+0x214>
			case DIO_PORTB : CLR_BIT(PORTB ,Copy_u8Pin);	break;
 4d6:	a8 e3       	ldi	r26, 0x38	; 56
 4d8:	b0 e0       	ldi	r27, 0x00	; 0
 4da:	e8 e3       	ldi	r30, 0x38	; 56
 4dc:	f0 e0       	ldi	r31, 0x00	; 0
 4de:	80 81       	ld	r24, Z
 4e0:	48 2f       	mov	r20, r24
 4e2:	8b 81       	ldd	r24, Y+3	; 0x03
 4e4:	28 2f       	mov	r18, r24
 4e6:	30 e0       	ldi	r19, 0x00	; 0
 4e8:	81 e0       	ldi	r24, 0x01	; 1
 4ea:	90 e0       	ldi	r25, 0x00	; 0
 4ec:	02 2e       	mov	r0, r18
 4ee:	02 c0       	rjmp	.+4      	; 0x4f4 <DIO_u8SetPinValue+0xb6>
 4f0:	88 0f       	add	r24, r24
 4f2:	99 1f       	adc	r25, r25
 4f4:	0a 94       	dec	r0
 4f6:	e2 f7       	brpl	.-8      	; 0x4f0 <DIO_u8SetPinValue+0xb2>
 4f8:	80 95       	com	r24
 4fa:	84 23       	and	r24, r20
 4fc:	8c 93       	st	X, r24
 4fe:	a9 c0       	rjmp	.+338    	; 0x652 <DIO_u8SetPinValue+0x214>
			case DIO_PORTC : CLR_BIT(PORTC ,Copy_u8Pin);	break;
 500:	a5 e3       	ldi	r26, 0x35	; 53
 502:	b0 e0       	ldi	r27, 0x00	; 0
 504:	e5 e3       	ldi	r30, 0x35	; 53
 506:	f0 e0       	ldi	r31, 0x00	; 0
 508:	80 81       	ld	r24, Z
 50a:	48 2f       	mov	r20, r24
 50c:	8b 81       	ldd	r24, Y+3	; 0x03
 50e:	28 2f       	mov	r18, r24
 510:	30 e0       	ldi	r19, 0x00	; 0
 512:	81 e0       	ldi	r24, 0x01	; 1
 514:	90 e0       	ldi	r25, 0x00	; 0
 516:	02 2e       	mov	r0, r18
 518:	02 c0       	rjmp	.+4      	; 0x51e <DIO_u8SetPinValue+0xe0>
 51a:	88 0f       	add	r24, r24
 51c:	99 1f       	adc	r25, r25
 51e:	0a 94       	dec	r0
 520:	e2 f7       	brpl	.-8      	; 0x51a <DIO_u8SetPinValue+0xdc>
 522:	80 95       	com	r24
 524:	84 23       	and	r24, r20
 526:	8c 93       	st	X, r24
 528:	94 c0       	rjmp	.+296    	; 0x652 <DIO_u8SetPinValue+0x214>
			case DIO_PORTD : CLR_BIT(PORTD ,Copy_u8Pin);	break;
 52a:	a2 e3       	ldi	r26, 0x32	; 50
 52c:	b0 e0       	ldi	r27, 0x00	; 0
 52e:	e2 e3       	ldi	r30, 0x32	; 50
 530:	f0 e0       	ldi	r31, 0x00	; 0
 532:	80 81       	ld	r24, Z
 534:	48 2f       	mov	r20, r24
 536:	8b 81       	ldd	r24, Y+3	; 0x03
 538:	28 2f       	mov	r18, r24
 53a:	30 e0       	ldi	r19, 0x00	; 0
 53c:	81 e0       	ldi	r24, 0x01	; 1
 53e:	90 e0       	ldi	r25, 0x00	; 0
 540:	02 2e       	mov	r0, r18
 542:	02 c0       	rjmp	.+4      	; 0x548 <DIO_u8SetPinValue+0x10a>
 544:	88 0f       	add	r24, r24
 546:	99 1f       	adc	r25, r25
 548:	0a 94       	dec	r0
 54a:	e2 f7       	brpl	.-8      	; 0x544 <DIO_u8SetPinValue+0x106>
 54c:	80 95       	com	r24
 54e:	84 23       	and	r24, r20
 550:	8c 93       	st	X, r24
 552:	7f c0       	rjmp	.+254    	; 0x652 <DIO_u8SetPinValue+0x214>
			default : Local_u8StateError = 1;
 554:	81 e0       	ldi	r24, 0x01	; 1
 556:	89 83       	std	Y+1, r24	; 0x01
 558:	7c c0       	rjmp	.+248    	; 0x652 <DIO_u8SetPinValue+0x214>
			}
		}
		else if(Copy_u8Value == DIO_HIGH)
 55a:	8c 81       	ldd	r24, Y+4	; 0x04
 55c:	81 30       	cpi	r24, 0x01	; 1
 55e:	09 f0       	breq	.+2      	; 0x562 <DIO_u8SetPinValue+0x124>
 560:	73 c0       	rjmp	.+230    	; 0x648 <DIO_u8SetPinValue+0x20a>
		{
			switch(Copy_u8Port)
 562:	8a 81       	ldd	r24, Y+2	; 0x02
 564:	28 2f       	mov	r18, r24
 566:	30 e0       	ldi	r19, 0x00	; 0
 568:	3e 83       	std	Y+6, r19	; 0x06
 56a:	2d 83       	std	Y+5, r18	; 0x05
 56c:	8d 81       	ldd	r24, Y+5	; 0x05
 56e:	9e 81       	ldd	r25, Y+6	; 0x06
 570:	82 30       	cpi	r24, 0x02	; 2
 572:	91 05       	cpc	r25, r1
 574:	51 f1       	breq	.+84     	; 0x5ca <DIO_u8SetPinValue+0x18c>
 576:	2d 81       	ldd	r18, Y+5	; 0x05
 578:	3e 81       	ldd	r19, Y+6	; 0x06
 57a:	23 30       	cpi	r18, 0x03	; 3
 57c:	31 05       	cpc	r19, r1
 57e:	34 f4       	brge	.+12     	; 0x58c <DIO_u8SetPinValue+0x14e>
 580:	8d 81       	ldd	r24, Y+5	; 0x05
 582:	9e 81       	ldd	r25, Y+6	; 0x06
 584:	81 30       	cpi	r24, 0x01	; 1
 586:	91 05       	cpc	r25, r1
 588:	61 f0       	breq	.+24     	; 0x5a2 <DIO_u8SetPinValue+0x164>
 58a:	5b c0       	rjmp	.+182    	; 0x642 <DIO_u8SetPinValue+0x204>
 58c:	2d 81       	ldd	r18, Y+5	; 0x05
 58e:	3e 81       	ldd	r19, Y+6	; 0x06
 590:	23 30       	cpi	r18, 0x03	; 3
 592:	31 05       	cpc	r19, r1
 594:	71 f1       	breq	.+92     	; 0x5f2 <DIO_u8SetPinValue+0x1b4>
 596:	8d 81       	ldd	r24, Y+5	; 0x05
 598:	9e 81       	ldd	r25, Y+6	; 0x06
 59a:	84 30       	cpi	r24, 0x04	; 4
 59c:	91 05       	cpc	r25, r1
 59e:	e9 f1       	breq	.+122    	; 0x61a <DIO_u8SetPinValue+0x1dc>
 5a0:	50 c0       	rjmp	.+160    	; 0x642 <DIO_u8SetPinValue+0x204>
			{
			case DIO_PORTA : SET_BIT(PORTA ,Copy_u8Pin);	break;
 5a2:	ab e3       	ldi	r26, 0x3B	; 59
 5a4:	b0 e0       	ldi	r27, 0x00	; 0
 5a6:	eb e3       	ldi	r30, 0x3B	; 59
 5a8:	f0 e0       	ldi	r31, 0x00	; 0
 5aa:	80 81       	ld	r24, Z
 5ac:	48 2f       	mov	r20, r24
 5ae:	8b 81       	ldd	r24, Y+3	; 0x03
 5b0:	28 2f       	mov	r18, r24
 5b2:	30 e0       	ldi	r19, 0x00	; 0
 5b4:	81 e0       	ldi	r24, 0x01	; 1
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	02 2e       	mov	r0, r18
 5ba:	02 c0       	rjmp	.+4      	; 0x5c0 <DIO_u8SetPinValue+0x182>
 5bc:	88 0f       	add	r24, r24
 5be:	99 1f       	adc	r25, r25
 5c0:	0a 94       	dec	r0
 5c2:	e2 f7       	brpl	.-8      	; 0x5bc <DIO_u8SetPinValue+0x17e>
 5c4:	84 2b       	or	r24, r20
 5c6:	8c 93       	st	X, r24
 5c8:	44 c0       	rjmp	.+136    	; 0x652 <DIO_u8SetPinValue+0x214>
			case DIO_PORTB : SET_BIT(PORTB ,Copy_u8Pin);	break;
 5ca:	a8 e3       	ldi	r26, 0x38	; 56
 5cc:	b0 e0       	ldi	r27, 0x00	; 0
 5ce:	e8 e3       	ldi	r30, 0x38	; 56
 5d0:	f0 e0       	ldi	r31, 0x00	; 0
 5d2:	80 81       	ld	r24, Z
 5d4:	48 2f       	mov	r20, r24
 5d6:	8b 81       	ldd	r24, Y+3	; 0x03
 5d8:	28 2f       	mov	r18, r24
 5da:	30 e0       	ldi	r19, 0x00	; 0
 5dc:	81 e0       	ldi	r24, 0x01	; 1
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	02 2e       	mov	r0, r18
 5e2:	02 c0       	rjmp	.+4      	; 0x5e8 <DIO_u8SetPinValue+0x1aa>
 5e4:	88 0f       	add	r24, r24
 5e6:	99 1f       	adc	r25, r25
 5e8:	0a 94       	dec	r0
 5ea:	e2 f7       	brpl	.-8      	; 0x5e4 <DIO_u8SetPinValue+0x1a6>
 5ec:	84 2b       	or	r24, r20
 5ee:	8c 93       	st	X, r24
 5f0:	30 c0       	rjmp	.+96     	; 0x652 <DIO_u8SetPinValue+0x214>
			case DIO_PORTC : SET_BIT(PORTC ,Copy_u8Pin);	break;
 5f2:	a5 e3       	ldi	r26, 0x35	; 53
 5f4:	b0 e0       	ldi	r27, 0x00	; 0
 5f6:	e5 e3       	ldi	r30, 0x35	; 53
 5f8:	f0 e0       	ldi	r31, 0x00	; 0
 5fa:	80 81       	ld	r24, Z
 5fc:	48 2f       	mov	r20, r24
 5fe:	8b 81       	ldd	r24, Y+3	; 0x03
 600:	28 2f       	mov	r18, r24
 602:	30 e0       	ldi	r19, 0x00	; 0
 604:	81 e0       	ldi	r24, 0x01	; 1
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	02 2e       	mov	r0, r18
 60a:	02 c0       	rjmp	.+4      	; 0x610 <DIO_u8SetPinValue+0x1d2>
 60c:	88 0f       	add	r24, r24
 60e:	99 1f       	adc	r25, r25
 610:	0a 94       	dec	r0
 612:	e2 f7       	brpl	.-8      	; 0x60c <DIO_u8SetPinValue+0x1ce>
 614:	84 2b       	or	r24, r20
 616:	8c 93       	st	X, r24
 618:	1c c0       	rjmp	.+56     	; 0x652 <DIO_u8SetPinValue+0x214>
			case DIO_PORTD : SET_BIT(PORTD ,Copy_u8Pin);	break;
 61a:	a2 e3       	ldi	r26, 0x32	; 50
 61c:	b0 e0       	ldi	r27, 0x00	; 0
 61e:	e2 e3       	ldi	r30, 0x32	; 50
 620:	f0 e0       	ldi	r31, 0x00	; 0
 622:	80 81       	ld	r24, Z
 624:	48 2f       	mov	r20, r24
 626:	8b 81       	ldd	r24, Y+3	; 0x03
 628:	28 2f       	mov	r18, r24
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	81 e0       	ldi	r24, 0x01	; 1
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	02 2e       	mov	r0, r18
 632:	02 c0       	rjmp	.+4      	; 0x638 <DIO_u8SetPinValue+0x1fa>
 634:	88 0f       	add	r24, r24
 636:	99 1f       	adc	r25, r25
 638:	0a 94       	dec	r0
 63a:	e2 f7       	brpl	.-8      	; 0x634 <DIO_u8SetPinValue+0x1f6>
 63c:	84 2b       	or	r24, r20
 63e:	8c 93       	st	X, r24
 640:	08 c0       	rjmp	.+16     	; 0x652 <DIO_u8SetPinValue+0x214>
			default : Local_u8StateError = 1;
 642:	81 e0       	ldi	r24, 0x01	; 1
 644:	89 83       	std	Y+1, r24	; 0x01
 646:	05 c0       	rjmp	.+10     	; 0x652 <DIO_u8SetPinValue+0x214>
			}
		}
		else
		{
			Local_u8StateError = 1;
 648:	81 e0       	ldi	r24, 0x01	; 1
 64a:	89 83       	std	Y+1, r24	; 0x01
 64c:	02 c0       	rjmp	.+4      	; 0x652 <DIO_u8SetPinValue+0x214>
		}
	}
	else
	{
		Local_u8StateError = 1;
 64e:	81 e0       	ldi	r24, 0x01	; 1
 650:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8StateError;
 652:	89 81       	ldd	r24, Y+1	; 0x01
}
 654:	28 96       	adiw	r28, 0x08	; 8
 656:	0f b6       	in	r0, 0x3f	; 63
 658:	f8 94       	cli
 65a:	de bf       	out	0x3e, r29	; 62
 65c:	0f be       	out	0x3f, r0	; 63
 65e:	cd bf       	out	0x3d, r28	; 61
 660:	cf 91       	pop	r28
 662:	df 91       	pop	r29
 664:	08 95       	ret

00000666 <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue (u8 Copy_u8Port,u8 Copy_u8Pin)
{
 666:	df 93       	push	r29
 668:	cf 93       	push	r28
 66a:	00 d0       	rcall	.+0      	; 0x66c <DIO_u8GetPinValue+0x6>
 66c:	00 d0       	rcall	.+0      	; 0x66e <DIO_u8GetPinValue+0x8>
 66e:	0f 92       	push	r0
 670:	cd b7       	in	r28, 0x3d	; 61
 672:	de b7       	in	r29, 0x3e	; 62
 674:	8a 83       	std	Y+2, r24	; 0x02
 676:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8InValue = 0;
 678:	19 82       	std	Y+1, r1	; 0x01

	switch(Copy_u8Port)
 67a:	8a 81       	ldd	r24, Y+2	; 0x02
 67c:	28 2f       	mov	r18, r24
 67e:	30 e0       	ldi	r19, 0x00	; 0
 680:	3d 83       	std	Y+5, r19	; 0x05
 682:	2c 83       	std	Y+4, r18	; 0x04
 684:	4c 81       	ldd	r20, Y+4	; 0x04
 686:	5d 81       	ldd	r21, Y+5	; 0x05
 688:	42 30       	cpi	r20, 0x02	; 2
 68a:	51 05       	cpc	r21, r1
 68c:	41 f1       	breq	.+80     	; 0x6de <DIO_u8GetPinValue+0x78>
 68e:	8c 81       	ldd	r24, Y+4	; 0x04
 690:	9d 81       	ldd	r25, Y+5	; 0x05
 692:	83 30       	cpi	r24, 0x03	; 3
 694:	91 05       	cpc	r25, r1
 696:	34 f4       	brge	.+12     	; 0x6a4 <DIO_u8GetPinValue+0x3e>
 698:	2c 81       	ldd	r18, Y+4	; 0x04
 69a:	3d 81       	ldd	r19, Y+5	; 0x05
 69c:	21 30       	cpi	r18, 0x01	; 1
 69e:	31 05       	cpc	r19, r1
 6a0:	61 f0       	breq	.+24     	; 0x6ba <DIO_u8GetPinValue+0x54>
 6a2:	52 c0       	rjmp	.+164    	; 0x748 <DIO_u8GetPinValue+0xe2>
 6a4:	4c 81       	ldd	r20, Y+4	; 0x04
 6a6:	5d 81       	ldd	r21, Y+5	; 0x05
 6a8:	43 30       	cpi	r20, 0x03	; 3
 6aa:	51 05       	cpc	r21, r1
 6ac:	51 f1       	breq	.+84     	; 0x702 <DIO_u8GetPinValue+0x9c>
 6ae:	8c 81       	ldd	r24, Y+4	; 0x04
 6b0:	9d 81       	ldd	r25, Y+5	; 0x05
 6b2:	84 30       	cpi	r24, 0x04	; 4
 6b4:	91 05       	cpc	r25, r1
 6b6:	b9 f1       	breq	.+110    	; 0x726 <DIO_u8GetPinValue+0xc0>
 6b8:	47 c0       	rjmp	.+142    	; 0x748 <DIO_u8GetPinValue+0xe2>
	{
	case DIO_PORTA : Local_u8InValue = GET_BIT(PINA,Copy_u8Pin); 	break;
 6ba:	e9 e3       	ldi	r30, 0x39	; 57
 6bc:	f0 e0       	ldi	r31, 0x00	; 0
 6be:	80 81       	ld	r24, Z
 6c0:	28 2f       	mov	r18, r24
 6c2:	30 e0       	ldi	r19, 0x00	; 0
 6c4:	8b 81       	ldd	r24, Y+3	; 0x03
 6c6:	88 2f       	mov	r24, r24
 6c8:	90 e0       	ldi	r25, 0x00	; 0
 6ca:	a9 01       	movw	r20, r18
 6cc:	02 c0       	rjmp	.+4      	; 0x6d2 <DIO_u8GetPinValue+0x6c>
 6ce:	55 95       	asr	r21
 6d0:	47 95       	ror	r20
 6d2:	8a 95       	dec	r24
 6d4:	e2 f7       	brpl	.-8      	; 0x6ce <DIO_u8GetPinValue+0x68>
 6d6:	ca 01       	movw	r24, r20
 6d8:	81 70       	andi	r24, 0x01	; 1
 6da:	89 83       	std	Y+1, r24	; 0x01
 6dc:	35 c0       	rjmp	.+106    	; 0x748 <DIO_u8GetPinValue+0xe2>
	case DIO_PORTB : Local_u8InValue = GET_BIT(PINB,Copy_u8Pin); 	break;
 6de:	e6 e3       	ldi	r30, 0x36	; 54
 6e0:	f0 e0       	ldi	r31, 0x00	; 0
 6e2:	80 81       	ld	r24, Z
 6e4:	28 2f       	mov	r18, r24
 6e6:	30 e0       	ldi	r19, 0x00	; 0
 6e8:	8b 81       	ldd	r24, Y+3	; 0x03
 6ea:	88 2f       	mov	r24, r24
 6ec:	90 e0       	ldi	r25, 0x00	; 0
 6ee:	a9 01       	movw	r20, r18
 6f0:	02 c0       	rjmp	.+4      	; 0x6f6 <DIO_u8GetPinValue+0x90>
 6f2:	55 95       	asr	r21
 6f4:	47 95       	ror	r20
 6f6:	8a 95       	dec	r24
 6f8:	e2 f7       	brpl	.-8      	; 0x6f2 <DIO_u8GetPinValue+0x8c>
 6fa:	ca 01       	movw	r24, r20
 6fc:	81 70       	andi	r24, 0x01	; 1
 6fe:	89 83       	std	Y+1, r24	; 0x01
 700:	23 c0       	rjmp	.+70     	; 0x748 <DIO_u8GetPinValue+0xe2>
	case DIO_PORTC : Local_u8InValue = GET_BIT(PINC,Copy_u8Pin); 	break;
 702:	e3 e3       	ldi	r30, 0x33	; 51
 704:	f0 e0       	ldi	r31, 0x00	; 0
 706:	80 81       	ld	r24, Z
 708:	28 2f       	mov	r18, r24
 70a:	30 e0       	ldi	r19, 0x00	; 0
 70c:	8b 81       	ldd	r24, Y+3	; 0x03
 70e:	88 2f       	mov	r24, r24
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	a9 01       	movw	r20, r18
 714:	02 c0       	rjmp	.+4      	; 0x71a <DIO_u8GetPinValue+0xb4>
 716:	55 95       	asr	r21
 718:	47 95       	ror	r20
 71a:	8a 95       	dec	r24
 71c:	e2 f7       	brpl	.-8      	; 0x716 <DIO_u8GetPinValue+0xb0>
 71e:	ca 01       	movw	r24, r20
 720:	81 70       	andi	r24, 0x01	; 1
 722:	89 83       	std	Y+1, r24	; 0x01
 724:	11 c0       	rjmp	.+34     	; 0x748 <DIO_u8GetPinValue+0xe2>
	case DIO_PORTD : Local_u8InValue = GET_BIT(PIND,Copy_u8Pin); 	break;
 726:	e0 e3       	ldi	r30, 0x30	; 48
 728:	f0 e0       	ldi	r31, 0x00	; 0
 72a:	80 81       	ld	r24, Z
 72c:	28 2f       	mov	r18, r24
 72e:	30 e0       	ldi	r19, 0x00	; 0
 730:	8b 81       	ldd	r24, Y+3	; 0x03
 732:	88 2f       	mov	r24, r24
 734:	90 e0       	ldi	r25, 0x00	; 0
 736:	a9 01       	movw	r20, r18
 738:	02 c0       	rjmp	.+4      	; 0x73e <DIO_u8GetPinValue+0xd8>
 73a:	55 95       	asr	r21
 73c:	47 95       	ror	r20
 73e:	8a 95       	dec	r24
 740:	e2 f7       	brpl	.-8      	; 0x73a <DIO_u8GetPinValue+0xd4>
 742:	ca 01       	movw	r24, r20
 744:	81 70       	andi	r24, 0x01	; 1
 746:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8InValue;
 748:	89 81       	ldd	r24, Y+1	; 0x01
}
 74a:	0f 90       	pop	r0
 74c:	0f 90       	pop	r0
 74e:	0f 90       	pop	r0
 750:	0f 90       	pop	r0
 752:	0f 90       	pop	r0
 754:	cf 91       	pop	r28
 756:	df 91       	pop	r29
 758:	08 95       	ret

0000075a <main>:
#include "../Librares/BIT_MATH.h"
#include "../Librares/STD_TYPES.h"

#include "../MCAL/01_DIO_Driver/DIO_Interface.h"
int main()
{
 75a:	df 93       	push	r29
 75c:	cf 93       	push	r28
 75e:	0f 92       	push	r0
 760:	cd b7       	in	r28, 0x3d	; 61
 762:	de b7       	in	r29, 0x3e	; 62
	u8 Local_u8PinState = 0;
 764:	19 82       	std	Y+1, r1	; 0x01
	DIO_u8SetPinDirection(DIO_PORTA , DIO_PIN0 , DIO_OUTPUT);
 766:	81 e0       	ldi	r24, 0x01	; 1
 768:	60 e0       	ldi	r22, 0x00	; 0
 76a:	41 e0       	ldi	r20, 0x01	; 1
 76c:	0e 94 0b 01 	call	0x216	; 0x216 <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection(DIO_PORTA , DIO_PIN1 , DIO_INPUT);
 770:	81 e0       	ldi	r24, 0x01	; 1
 772:	61 e0       	ldi	r22, 0x01	; 1
 774:	40 e0       	ldi	r20, 0x00	; 0
 776:	0e 94 0b 01 	call	0x216	; 0x216 <DIO_u8SetPinDirection>
	while(1)
	{
		Local_u8PinState = DIO_u8GetPinValue(DIO_PORTA , DIO_PIN1);
 77a:	81 e0       	ldi	r24, 0x01	; 1
 77c:	61 e0       	ldi	r22, 0x01	; 1
 77e:	0e 94 33 03 	call	0x666	; 0x666 <DIO_u8GetPinValue>
 782:	89 83       	std	Y+1, r24	; 0x01
		if(Local_u8PinState == 0)
 784:	89 81       	ldd	r24, Y+1	; 0x01
 786:	88 23       	and	r24, r24
 788:	31 f4       	brne	.+12     	; 0x796 <main+0x3c>
		{
			DIO_u8SetPinValue(DIO_PORTA , DIO_PIN0 , DIO_LOW);
 78a:	81 e0       	ldi	r24, 0x01	; 1
 78c:	60 e0       	ldi	r22, 0x00	; 0
 78e:	40 e0       	ldi	r20, 0x00	; 0
 790:	0e 94 1f 02 	call	0x43e	; 0x43e <DIO_u8SetPinValue>
 794:	f2 cf       	rjmp	.-28     	; 0x77a <main+0x20>
		}
		else if (Local_u8PinState == 1)
 796:	89 81       	ldd	r24, Y+1	; 0x01
 798:	81 30       	cpi	r24, 0x01	; 1
 79a:	79 f7       	brne	.-34     	; 0x77a <main+0x20>
		{
			DIO_u8SetPinValue(DIO_PORTA , DIO_PIN0 , DIO_HIGH);
 79c:	81 e0       	ldi	r24, 0x01	; 1
 79e:	60 e0       	ldi	r22, 0x00	; 0
 7a0:	41 e0       	ldi	r20, 0x01	; 1
 7a2:	0e 94 1f 02 	call	0x43e	; 0x43e <DIO_u8SetPinValue>
 7a6:	e9 cf       	rjmp	.-46     	; 0x77a <main+0x20>

000007a8 <_exit>:
 7a8:	f8 94       	cli

000007aa <__stop_program>:
 7aa:	ff cf       	rjmp	.-2      	; 0x7aa <__stop_program>
